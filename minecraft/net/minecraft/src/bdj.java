package net.minecraft.src;

import net.minecraft.world.biome.BiomeColorHelper;
import net.minecraft.world.biome.BiomeDesert;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.GenLayerHills;

public class bdj extends GenLayerHills
{
    public bdj(long p_i2053_1_, GenLayerHills p_i2053_3_)
    {
        super(p_i2053_1_);
        this.a = p_i2053_3_;
    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight)
    {
        int[] aint = this.a.getInts(areaX - 1, areaY - 1, areaWidth + 2, areaHeight + 2);
        int[] aint1 = GenLayer.a(areaWidth * areaHeight);

        for (int i = 0; i < areaHeight; ++i)
        {
            for (int j = 0; j < areaWidth; ++j)
            {
                this.a((long)(j + areaX), (long)(i + areaY));
                int k = aint[j + 1 + (i + 1) * (areaWidth + 2)];

                if (!this.a(aint, aint1, j, i, areaWidth, k, BiomeColorHelper.a(BiomeDesert.e), BiomeColorHelper.a(BiomeDesert.v)) && !this.b(aint, aint1, j, i, areaWidth, k, BiomeColorHelper.a(BiomeDesert.N), BiomeColorHelper.a(BiomeDesert.M)) && !this.b(aint, aint1, j, i, areaWidth, k, BiomeColorHelper.a(BiomeDesert.O), BiomeColorHelper.a(BiomeDesert.M)) && !this.b(aint, aint1, j, i, areaWidth, k, BiomeColorHelper.a(BiomeDesert.H), BiomeColorHelper.a(BiomeDesert.g)))
                {
                    if (k == BiomeColorHelper.a(BiomeDesert.d))
                    {
                        int l1 = aint[j + 1 + (i + 1 - 1) * (areaWidth + 2)];
                        int i2 = aint[j + 1 + 1 + (i + 1) * (areaWidth + 2)];
                        int j2 = aint[j + 1 - 1 + (i + 1) * (areaWidth + 2)];
                        int k2 = aint[j + 1 + (i + 1 + 1) * (areaWidth + 2)];

                        if (l1 != BiomeColorHelper.a(BiomeDesert.n) && i2 != BiomeColorHelper.a(BiomeDesert.n) && j2 != BiomeColorHelper.a(BiomeDesert.n) && k2 != BiomeColorHelper.a(BiomeDesert.n))
                        {
                            aint1[j + i * areaWidth] = k;
                        }
                        else
                        {
                            aint1[j + i * areaWidth] = BiomeColorHelper.a(BiomeDesert.J);
                        }
                    }
                    else if (k == BiomeColorHelper.a(BiomeDesert.h))
                    {
                        int l = aint[j + 1 + (i + 1 - 1) * (areaWidth + 2)];
                        int i1 = aint[j + 1 + 1 + (i + 1) * (areaWidth + 2)];
                        int j1 = aint[j + 1 - 1 + (i + 1) * (areaWidth + 2)];
                        int k1 = aint[j + 1 + (i + 1 + 1) * (areaWidth + 2)];

                        if (l != BiomeColorHelper.a(BiomeDesert.d) && i1 != BiomeColorHelper.a(BiomeDesert.d) && j1 != BiomeColorHelper.a(BiomeDesert.d) && k1 != BiomeColorHelper.a(BiomeDesert.d) && l != BiomeColorHelper.a(BiomeDesert.F) && i1 != BiomeColorHelper.a(BiomeDesert.F) && j1 != BiomeColorHelper.a(BiomeDesert.F) && k1 != BiomeColorHelper.a(BiomeDesert.F) && l != BiomeColorHelper.a(BiomeDesert.n) && i1 != BiomeColorHelper.a(BiomeDesert.n) && j1 != BiomeColorHelper.a(BiomeDesert.n) && k1 != BiomeColorHelper.a(BiomeDesert.n))
                        {
                            if (l != BiomeColorHelper.a(BiomeDesert.w) && k1 != BiomeColorHelper.a(BiomeDesert.w) && i1 != BiomeColorHelper.a(BiomeDesert.w) && j1 != BiomeColorHelper.a(BiomeDesert.w))
                            {
                                aint1[j + i * areaWidth] = k;
                            }
                            else
                            {
                                aint1[j + i * areaWidth] = BiomeColorHelper.a(BiomeDesert.y);
                            }
                        }
                        else
                        {
                            aint1[j + i * areaWidth] = BiomeColorHelper.a(BiomeDesert.c);
                        }
                    }
                    else
                    {
                        aint1[j + i * areaWidth] = k;
                    }
                }
            }
        }

        return aint1;
    }

    private boolean a(int[] p_a_1_, int[] p_a_2_, int p_a_3_, int p_a_4_, int p_a_5_, int p_a_6_, int p_a_7_, int p_a_8_)
    {
        if (!a(p_a_6_, p_a_7_))
        {
            return false;
        }
        else
        {
            int i = p_a_1_[p_a_3_ + 1 + (p_a_4_ + 1 - 1) * (p_a_5_ + 2)];
            int j = p_a_1_[p_a_3_ + 1 + 1 + (p_a_4_ + 1) * (p_a_5_ + 2)];
            int k = p_a_1_[p_a_3_ + 1 - 1 + (p_a_4_ + 1) * (p_a_5_ + 2)];
            int l = p_a_1_[p_a_3_ + 1 + (p_a_4_ + 1 + 1) * (p_a_5_ + 2)];

            if (this.b(i, p_a_7_) && this.b(j, p_a_7_) && this.b(k, p_a_7_) && this.b(l, p_a_7_))
            {
                p_a_2_[p_a_3_ + p_a_4_ * p_a_5_] = p_a_6_;
            }
            else
            {
                p_a_2_[p_a_3_ + p_a_4_ * p_a_5_] = p_a_8_;
            }

            return true;
        }
    }

    private boolean b(int[] p_b_1_, int[] p_b_2_, int p_b_3_, int p_b_4_, int p_b_5_, int p_b_6_, int p_b_7_, int p_b_8_)
    {
        if (p_b_6_ != p_b_7_)
        {
            return false;
        }
        else
        {
            int i = p_b_1_[p_b_3_ + 1 + (p_b_4_ + 1 - 1) * (p_b_5_ + 2)];
            int j = p_b_1_[p_b_3_ + 1 + 1 + (p_b_4_ + 1) * (p_b_5_ + 2)];
            int k = p_b_1_[p_b_3_ + 1 - 1 + (p_b_4_ + 1) * (p_b_5_ + 2)];
            int l = p_b_1_[p_b_3_ + 1 + (p_b_4_ + 1 + 1) * (p_b_5_ + 2)];

            if (a(i, p_b_7_) && a(j, p_b_7_) && a(k, p_b_7_) && a(l, p_b_7_))
            {
                p_b_2_[p_b_3_ + p_b_4_ * p_b_5_] = p_b_6_;
            }
            else
            {
                p_b_2_[p_b_3_ + p_b_4_ * p_b_5_] = p_b_8_;
            }

            return true;
        }
    }

    private boolean b(int p_b_1_, int p_b_2_)
    {
        if (a(p_b_1_, p_b_2_))
        {
            return true;
        }
        else
        {
            BiomeColorHelper biomecolorhelper = BiomeColorHelper.b(p_b_1_);
            BiomeColorHelper biomecolorhelper1 = BiomeColorHelper.b(p_b_2_);

            if (biomecolorhelper != null && biomecolorhelper1 != null)
            {
                BiomeColorHelper.b biomecolorhelper$b = biomecolorhelper.h();
                BiomeColorHelper.b biomecolorhelper$b1 = biomecolorhelper1.h();
                return biomecolorhelper$b == biomecolorhelper$b1 || biomecolorhelper$b == BiomeColorHelper.b.c || biomecolorhelper$b1 == BiomeColorHelper.b.c;
            }
            else
            {
                return false;
            }
        }
    }
}
